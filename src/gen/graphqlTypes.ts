// Sourcecode generated by graphql-codegen. DO NOT EDIT!
/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
};

export type DeleteAppFromDeviceInput = {
  bundleId: Scalars['String']['input'];
  deviceId: Scalars['String']['input'];
};

export type Filter = {
  actionType: FilterAction;
  enableMeta?: InputMaybe<Scalars['String']['input']>;
  rule: Scalars['String']['input'];
  serviceName: Scalars['String']['input'];
};

export enum FilterAction {
  Disable = 'DISABLE',
  Enable = 'ENABLE'
}

export type FilterOutputEntry = {
  __typename?: 'FilterOutputEntry';
  actionType: FilterAction;
  enableMeta?: Maybe<Scalars['String']['output']>;
  rule: Scalars['String']['output'];
  serviceName: Scalars['String']['output'];
};

export type GetSettingsInput = {
  bundleId: Scalars['String']['input'];
  deviceId: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  deleteAppFromDevice?: Maybe<Scalars['Boolean']['output']>;
  registerAppOnDevice?: Maybe<Scalars['Boolean']['output']>;
  sendTestNotification: Scalars['Boolean']['output'];
  updateDeviceInfo?: Maybe<Scalars['Boolean']['output']>;
  updateNotificationSettings?: Maybe<Scalars['Boolean']['output']>;
};


export type MutationDeleteAppFromDeviceArgs = {
  input: DeleteAppFromDeviceInput;
};


export type MutationRegisterAppOnDeviceArgs = {
  input: RegisterAppOnDeviceInput;
};


export type MutationSendTestNotificationArgs = {
  input?: InputMaybe<SendTestNotificationInput>;
};


export type MutationUpdateDeviceInfoArgs = {
  input: UpdateInfoInput;
};


export type MutationUpdateNotificationSettingsArgs = {
  input: UpdateSettingsInput;
};

export type NotifiableServiceSchema = {
  schema?: InputMaybe<Array<SchemaEntry>>;
  serviceName: Scalars['String']['input'];
};

export type NotificationSettingsOutput = {
  __typename?: 'NotificationSettingsOutput';
  filter: Array<FilterOutputEntry>;
};

export type Query = {
  __typename?: 'Query';
  getNotificationSettings: NotificationSettingsOutput;
};


export type QueryGetNotificationSettingsArgs = {
  input: GetSettingsInput;
};

export type RegisterAppOnDeviceInput = {
  build: BuildType;
  bundleId: Scalars['String']['input'];
  clientEnv: ClientEnvType;
  deviceId: Scalars['String']['input'];
  locale?: InputMaybe<Scalars['String']['input']>;
  standardToken?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  voipToken?: InputMaybe<Scalars['String']['input']>;
};

export type SchemaEntry = {
  description: Scalars['String']['input'];
  fieldName: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type SendTestNotificationInput = {
  body?: InputMaybe<Scalars['String']['input']>;
  data: Scalars['String']['input'];
  filter: Scalars['String']['input'];
  purpose?: InputMaybe<TestNotificationPurpose>;
  serviceName: Scalars['String']['input'];
  title?: InputMaybe<Scalars['String']['input']>;
};

export enum TestNotificationPurpose {
  Standard = 'STANDARD',
  Voip = 'VOIP'
}

export type UpdateInfoInput = {
  build: BuildType;
  bundleId: Scalars['String']['input'];
  deviceId: Scalars['String']['input'];
  locale?: InputMaybe<Scalars['String']['input']>;
  standardToken?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  voipToken?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateSettingsInput = {
  bundleId: Scalars['String']['input'];
  deviceId: Scalars['String']['input'];
  filter: Array<InputMaybe<Filter>>;
  services: Array<NotifiableServiceSchema>;
};

export enum BuildType {
  Debug = 'DEBUG',
  Release = 'RELEASE'
}

export enum ClientEnvType {
  Android = 'ANDROID',
  Ios = 'IOS',
  Test = 'TEST',
  Web = 'WEB',
  Webhook = 'WEBHOOK'
}

export type DeleteAppFromDeviceMutationVariables = Exact<{
  input: DeleteAppFromDeviceInput;
}>;


export type DeleteAppFromDeviceMutation = { __typename?: 'Mutation', deleteAppFromDevice?: boolean | null };

export type GetNotificationSettingsQueryVariables = Exact<{
  input: GetSettingsInput;
}>;


export type GetNotificationSettingsQuery = { __typename?: 'Query', getNotificationSettings: { __typename?: 'NotificationSettingsOutput', filter: Array<{ __typename?: 'FilterOutputEntry', serviceName: string, actionType: FilterAction, rule: string, enableMeta?: string | null }> } };

export type NotificationSettingsOutputFragment = { __typename?: 'NotificationSettingsOutput', filter: Array<{ __typename?: 'FilterOutputEntry', serviceName: string, actionType: FilterAction, rule: string, enableMeta?: string | null }> };

export type RegisterAppOnDeviceMutationVariables = Exact<{
  input: RegisterAppOnDeviceInput;
}>;


export type RegisterAppOnDeviceMutation = { __typename?: 'Mutation', registerAppOnDevice?: boolean | null };

export type SendTestNotificationMutationVariables = Exact<{
  input: SendTestNotificationInput;
}>;


export type SendTestNotificationMutation = { __typename?: 'Mutation', sendTestNotification: boolean };

export type UpdateDeviceInfoMutationVariables = Exact<{
  input: UpdateInfoInput;
}>;


export type UpdateDeviceInfoMutation = { __typename?: 'Mutation', updateDeviceInfo?: boolean | null };

export type UpdateNotificationSettingsMutationVariables = Exact<{
  input: UpdateSettingsInput;
}>;


export type UpdateNotificationSettingsMutation = { __typename?: 'Mutation', updateNotificationSettings?: boolean | null };

export const NotificationSettingsOutputFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NotificationSettingsOutput"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NotificationSettingsOutput"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"filter"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"serviceName"}},{"kind":"Field","name":{"kind":"Name","value":"actionType"}},{"kind":"Field","name":{"kind":"Name","value":"rule"}},{"kind":"Field","name":{"kind":"Name","value":"enableMeta"}}]}}]}}]} as unknown as DocumentNode<NotificationSettingsOutputFragment, unknown>;
export const DeleteAppFromDeviceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteAppFromDevice"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DeleteAppFromDeviceInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteAppFromDevice"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<DeleteAppFromDeviceMutation, DeleteAppFromDeviceMutationVariables>;
export const GetNotificationSettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getNotificationSettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GetSettingsInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getNotificationSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NotificationSettingsOutput"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NotificationSettingsOutput"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NotificationSettingsOutput"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"filter"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"serviceName"}},{"kind":"Field","name":{"kind":"Name","value":"actionType"}},{"kind":"Field","name":{"kind":"Name","value":"rule"}},{"kind":"Field","name":{"kind":"Name","value":"enableMeta"}}]}}]}}]} as unknown as DocumentNode<GetNotificationSettingsQuery, GetNotificationSettingsQueryVariables>;
export const RegisterAppOnDeviceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RegisterAppOnDevice"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RegisterAppOnDeviceInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"registerAppOnDevice"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<RegisterAppOnDeviceMutation, RegisterAppOnDeviceMutationVariables>;
export const SendTestNotificationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"sendTestNotification"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SendTestNotificationInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sendTestNotification"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SendTestNotificationMutation, SendTestNotificationMutationVariables>;
export const UpdateDeviceInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateDeviceInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateInfoInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateDeviceInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<UpdateDeviceInfoMutation, UpdateDeviceInfoMutationVariables>;
export const UpdateNotificationSettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateNotificationSettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateSettingsInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateNotificationSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<UpdateNotificationSettingsMutation, UpdateNotificationSettingsMutationVariables>;